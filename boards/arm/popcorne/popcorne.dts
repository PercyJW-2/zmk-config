/*
 * Copyright (c) 2025 Joris Wachsmuth
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>

#include "popcorne-pinctrl.dtsi"
#include "popcorne-layouts.dtsi"

&popcorne_layout {
    transform = <&matrix_transform0>;
};

/ {
    model = "Popcorne";
    compatible = "popcorne";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,display = &oled;
        zmk,battery = &vbatt;
        zmk,kscan = &kscan0;
        zmk,physical-layout = &popcorne_layout;
        zmk,underglow = &led_strip;
    };

    matrix_transform0: matrix_transform0 {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <12>;

        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)           RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)           RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(3,5)   RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
                        RC(3,1) RC(3,2) RC(3,3) RC(3,4)           RC(3,6) RC(3,7) RC(3,8) RC(3,9)
        >;
    };

    kscan0: kscan0 {
        compatible = "zmk,kscan-composite";
        rows = <4>;
        columns = <12>;

        left {
            kscan = <&kscan_left>;
        };

        right {
            kscan = <&kscan_right>;
            col-offset = <6>;
        };
    };

    kscan_left: kscan_left {
        compatible = "zmk,kscan-gpio-matrix";

        debounce-press-ms=<1>;
        debounce-release-ms=<1>;

        diode-direction = "row2col";

        col-gpios
            = <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 14 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 16 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&gpio0 25 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
        row-gpios
            = <&gpio0 03 (GPIO_ACTIVE_HIGH)>
            , <&gpio0 28 (GPIO_ACTIVE_HIGH)>
            , <&gpio0 02 (GPIO_ACTIVE_HIGH)>
            , <&gpio0 31 (GPIO_ACTIVE_HIGH)>
            ;
    };

    kscan_right: kscan_right {
        compatible = "zmk,kscan-gpio-matrix";

        debounce-press-ms=<1>;
        debounce-release-ms=<1>;

        diode-direction = "col2row";

        col-gpios
            = <&right_io 0 (GPIO_ACTIVE_LOW)>
            , <&right_io 1 (GPIO_ACTIVE_LOW)>
            , <&right_io 2 (GPIO_ACTIVE_LOW)>
            , <&right_io 3 (GPIO_ACTIVE_LOW)>
            , <&right_io 4 (GPIO_ACTIVE_LOW)>
            , <&right_io 5 (GPIO_ACTIVE_LOW)>
            ;
        row-gpios
            = <&right_io 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&right_io 9 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&right_io 10 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&right_io 11 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

    // Node name must match original "EXT_POWER" label to preserve user settings. HINT: This board does not use this feature and the power mode needs to be switched manually via a keycode.
    EXT_POWER {
        compatible = "zmk,ext-power-generic";
        control-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-voltage-divider";
        io-channels = <&adc 6>;
        output-ohms = <110000>;
        full-ohms = <(110000 + 30000)>;
    };

    left_encoder: left_encoder {
        compatible = "alps,ec11";
        steps = <30>;
        status = "disabled";

        a-gpios = <&gpio0 23 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
    };

    /*led_strip: led_strip {
        compatible = "worldsemi,ws2812-gpio";
        chain-length = <44>;
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
        //gpios = <&gpio1 12 0>;
        in-gpios = <&gpio1 12 0>;
    };*/

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder>;
        triggers-per-rotation = <15>;
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&left_encoder {
    status = "okay";
};

&i2c0 {
    compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-1 = <&i2c0_sleep>;
    pinctrl-names = "default", "sleep";
    status = "okay";

    right_io: mcp23017@20 {
        compatible = "microchip,mcp230xx";
        status = "okay";
        gpio-controller;
        reg = <0x20>;
        #gpio-cells = <2>;
        ngpios = <16>;
    };

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        inversion-on;
        prechargep = <0x22>;
    };
};

&i2s0 {
    compatible = "nordic,nrf-i2s";
    pinctrl-0 = <&i2s0_default>;
    //pinctlr-1 = <&i2s0_sleep>;
    //pinctlr-names = "default";//, "sleep";
    status = "okay";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-i2s";

        reg = <0>;

        chain-length = <44>; /* arbitrary; change at will */
        color-mapping = <LED_COLOR_ID_GREEN
                         LED_COLOR_ID_RED
                         LED_COLOR_ID_BLUE>;
        reset-delay = <500>;
    };
};

//&spi3 {
//    compatible = "nordic,nrf-spim";
//
//    pinctrl-0 = <&spi3_default>;
//    pinctrl-1 = <&spi3_sleep>;
//    pinctrl-names = "default", "sleep";
//    status = "okay";
//
//    led_strip: ws2812@0 {
//        compatible = "worldsemi,ws2812-spi";
//
//        /* SPI */
//        reg = <0>; /* ignored, but necessary for SPI bindings */
//        spi-max-frequency = <4000000>;
//
//        /* WS2812 */
//        chain-length = <44>; /* number of LEDs */
//        spi-one-frame = <0x70>;
//        spi-zero-frame = <0x40>;
//        color-mapping = <LED_COLOR_ID_GREEN
//        LED_COLOR_ID_RED
//        LED_COLOR_ID_BLUE>;
//    };
//};

zephyr_udc0: &usbd {
    status = "okay";
};

&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            reg = <0x000f4000 0x0000c000>;
        };
    };
};
